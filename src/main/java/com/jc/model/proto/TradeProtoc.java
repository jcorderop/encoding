// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Trade.proto

package com.jc.model.proto;

/**
 * Protobuf type {@code encoding.TradeProtoc}
 */
public final class TradeProtoc extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:encoding.TradeProtoc)
    TradeProtocOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TradeProtoc.newBuilder() to construct.
  private TradeProtoc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TradeProtoc() {
    tradeType_ = 0;
    symbol_ = "";
    exchange_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TradeProtoc();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TradeProtoc(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            tradeId_ = input.readInt64();
            break;
          }
          case 16: {

            customerId_ = input.readInt64();
            break;
          }
          case 24: {

            qty_ = input.readInt64();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            tradeType_ = rawValue;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            symbol_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            exchange_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.jc.model.proto.Trade.internal_static_encoding_TradeProtoc_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.jc.model.proto.Trade.internal_static_encoding_TradeProtoc_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.jc.model.proto.TradeProtoc.class, com.jc.model.proto.TradeProtoc.Builder.class);
  }

  /**
   * Protobuf enum {@code encoding.TradeProtoc.TradeType}
   */
  public enum TradeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Buy = 0;</code>
     */
    Buy(0),
    /**
     * <code>Sell = 1;</code>
     */
    Sell(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Buy = 0;</code>
     */
    public static final int Buy_VALUE = 0;
    /**
     * <code>Sell = 1;</code>
     */
    public static final int Sell_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TradeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TradeType forNumber(int value) {
      switch (value) {
        case 0: return Buy;
        case 1: return Sell;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TradeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TradeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TradeType>() {
            public TradeType findValueByNumber(int number) {
              return TradeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.jc.model.proto.TradeProtoc.getDescriptor().getEnumTypes().get(0);
    }

    private static final TradeType[] VALUES = values();

    public static TradeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TradeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:encoding.TradeProtoc.TradeType)
  }

  public static final int TRADEID_FIELD_NUMBER = 1;
  private long tradeId_;
  /**
   * <code>int64 tradeId = 1;</code>
   * @return The tradeId.
   */
  @java.lang.Override
  public long getTradeId() {
    return tradeId_;
  }

  public static final int CUSTOMERID_FIELD_NUMBER = 2;
  private long customerId_;
  /**
   * <code>int64 customerId = 2;</code>
   * @return The customerId.
   */
  @java.lang.Override
  public long getCustomerId() {
    return customerId_;
  }

  public static final int QTY_FIELD_NUMBER = 3;
  private long qty_;
  /**
   * <code>int64 qty = 3;</code>
   * @return The qty.
   */
  @java.lang.Override
  public long getQty() {
    return qty_;
  }

  public static final int TRADETYPE_FIELD_NUMBER = 4;
  private int tradeType_;
  /**
   * <code>.encoding.TradeProtoc.TradeType tradeType = 4;</code>
   * @return The enum numeric value on the wire for tradeType.
   */
  @java.lang.Override public int getTradeTypeValue() {
    return tradeType_;
  }
  /**
   * <code>.encoding.TradeProtoc.TradeType tradeType = 4;</code>
   * @return The tradeType.
   */
  @java.lang.Override public com.jc.model.proto.TradeProtoc.TradeType getTradeType() {
    @SuppressWarnings("deprecation")
    com.jc.model.proto.TradeProtoc.TradeType result = com.jc.model.proto.TradeProtoc.TradeType.valueOf(tradeType_);
    return result == null ? com.jc.model.proto.TradeProtoc.TradeType.UNRECOGNIZED : result;
  }

  public static final int SYMBOL_FIELD_NUMBER = 5;
  private volatile java.lang.Object symbol_;
  /**
   * <code>string symbol = 5;</code>
   * @return The symbol.
   */
  @java.lang.Override
  public java.lang.String getSymbol() {
    java.lang.Object ref = symbol_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      symbol_ = s;
      return s;
    }
  }
  /**
   * <code>string symbol = 5;</code>
   * @return The bytes for symbol.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSymbolBytes() {
    java.lang.Object ref = symbol_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      symbol_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXCHANGE_FIELD_NUMBER = 6;
  private volatile java.lang.Object exchange_;
  /**
   * <code>string exchange = 6;</code>
   * @return The exchange.
   */
  @java.lang.Override
  public java.lang.String getExchange() {
    java.lang.Object ref = exchange_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      exchange_ = s;
      return s;
    }
  }
  /**
   * <code>string exchange = 6;</code>
   * @return The bytes for exchange.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExchangeBytes() {
    java.lang.Object ref = exchange_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      exchange_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tradeId_ != 0L) {
      output.writeInt64(1, tradeId_);
    }
    if (customerId_ != 0L) {
      output.writeInt64(2, customerId_);
    }
    if (qty_ != 0L) {
      output.writeInt64(3, qty_);
    }
    if (tradeType_ != com.jc.model.proto.TradeProtoc.TradeType.Buy.getNumber()) {
      output.writeEnum(4, tradeType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, symbol_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchange_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, exchange_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tradeId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, tradeId_);
    }
    if (customerId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, customerId_);
    }
    if (qty_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, qty_);
    }
    if (tradeType_ != com.jc.model.proto.TradeProtoc.TradeType.Buy.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, tradeType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, symbol_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchange_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, exchange_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.jc.model.proto.TradeProtoc)) {
      return super.equals(obj);
    }
    com.jc.model.proto.TradeProtoc other = (com.jc.model.proto.TradeProtoc) obj;

    if (getTradeId()
        != other.getTradeId()) return false;
    if (getCustomerId()
        != other.getCustomerId()) return false;
    if (getQty()
        != other.getQty()) return false;
    if (tradeType_ != other.tradeType_) return false;
    if (!getSymbol()
        .equals(other.getSymbol())) return false;
    if (!getExchange()
        .equals(other.getExchange())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TRADEID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTradeId());
    hash = (37 * hash) + CUSTOMERID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCustomerId());
    hash = (37 * hash) + QTY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getQty());
    hash = (37 * hash) + TRADETYPE_FIELD_NUMBER;
    hash = (53 * hash) + tradeType_;
    hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
    hash = (53 * hash) + getSymbol().hashCode();
    hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
    hash = (53 * hash) + getExchange().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.jc.model.proto.TradeProtoc parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jc.model.proto.TradeProtoc parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.jc.model.proto.TradeProtoc parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jc.model.proto.TradeProtoc parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.jc.model.proto.TradeProtoc prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code encoding.TradeProtoc}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:encoding.TradeProtoc)
      com.jc.model.proto.TradeProtocOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jc.model.proto.Trade.internal_static_encoding_TradeProtoc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jc.model.proto.Trade.internal_static_encoding_TradeProtoc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jc.model.proto.TradeProtoc.class, com.jc.model.proto.TradeProtoc.Builder.class);
    }

    // Construct using com.jc.model.proto.TradeProtoc.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      tradeId_ = 0L;

      customerId_ = 0L;

      qty_ = 0L;

      tradeType_ = 0;

      symbol_ = "";

      exchange_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.jc.model.proto.Trade.internal_static_encoding_TradeProtoc_descriptor;
    }

    @java.lang.Override
    public com.jc.model.proto.TradeProtoc getDefaultInstanceForType() {
      return com.jc.model.proto.TradeProtoc.getDefaultInstance();
    }

    @java.lang.Override
    public com.jc.model.proto.TradeProtoc build() {
      com.jc.model.proto.TradeProtoc result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.jc.model.proto.TradeProtoc buildPartial() {
      com.jc.model.proto.TradeProtoc result = new com.jc.model.proto.TradeProtoc(this);
      result.tradeId_ = tradeId_;
      result.customerId_ = customerId_;
      result.qty_ = qty_;
      result.tradeType_ = tradeType_;
      result.symbol_ = symbol_;
      result.exchange_ = exchange_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.jc.model.proto.TradeProtoc) {
        return mergeFrom((com.jc.model.proto.TradeProtoc)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.jc.model.proto.TradeProtoc other) {
      if (other == com.jc.model.proto.TradeProtoc.getDefaultInstance()) return this;
      if (other.getTradeId() != 0L) {
        setTradeId(other.getTradeId());
      }
      if (other.getCustomerId() != 0L) {
        setCustomerId(other.getCustomerId());
      }
      if (other.getQty() != 0L) {
        setQty(other.getQty());
      }
      if (other.tradeType_ != 0) {
        setTradeTypeValue(other.getTradeTypeValue());
      }
      if (!other.getSymbol().isEmpty()) {
        symbol_ = other.symbol_;
        onChanged();
      }
      if (!other.getExchange().isEmpty()) {
        exchange_ = other.exchange_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.jc.model.proto.TradeProtoc parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.jc.model.proto.TradeProtoc) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long tradeId_ ;
    /**
     * <code>int64 tradeId = 1;</code>
     * @return The tradeId.
     */
    @java.lang.Override
    public long getTradeId() {
      return tradeId_;
    }
    /**
     * <code>int64 tradeId = 1;</code>
     * @param value The tradeId to set.
     * @return This builder for chaining.
     */
    public Builder setTradeId(long value) {
      
      tradeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 tradeId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTradeId() {
      
      tradeId_ = 0L;
      onChanged();
      return this;
    }

    private long customerId_ ;
    /**
     * <code>int64 customerId = 2;</code>
     * @return The customerId.
     */
    @java.lang.Override
    public long getCustomerId() {
      return customerId_;
    }
    /**
     * <code>int64 customerId = 2;</code>
     * @param value The customerId to set.
     * @return This builder for chaining.
     */
    public Builder setCustomerId(long value) {
      
      customerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 customerId = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCustomerId() {
      
      customerId_ = 0L;
      onChanged();
      return this;
    }

    private long qty_ ;
    /**
     * <code>int64 qty = 3;</code>
     * @return The qty.
     */
    @java.lang.Override
    public long getQty() {
      return qty_;
    }
    /**
     * <code>int64 qty = 3;</code>
     * @param value The qty to set.
     * @return This builder for chaining.
     */
    public Builder setQty(long value) {
      
      qty_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 qty = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearQty() {
      
      qty_ = 0L;
      onChanged();
      return this;
    }

    private int tradeType_ = 0;
    /**
     * <code>.encoding.TradeProtoc.TradeType tradeType = 4;</code>
     * @return The enum numeric value on the wire for tradeType.
     */
    @java.lang.Override public int getTradeTypeValue() {
      return tradeType_;
    }
    /**
     * <code>.encoding.TradeProtoc.TradeType tradeType = 4;</code>
     * @param value The enum numeric value on the wire for tradeType to set.
     * @return This builder for chaining.
     */
    public Builder setTradeTypeValue(int value) {
      
      tradeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.encoding.TradeProtoc.TradeType tradeType = 4;</code>
     * @return The tradeType.
     */
    @java.lang.Override
    public com.jc.model.proto.TradeProtoc.TradeType getTradeType() {
      @SuppressWarnings("deprecation")
      com.jc.model.proto.TradeProtoc.TradeType result = com.jc.model.proto.TradeProtoc.TradeType.valueOf(tradeType_);
      return result == null ? com.jc.model.proto.TradeProtoc.TradeType.UNRECOGNIZED : result;
    }
    /**
     * <code>.encoding.TradeProtoc.TradeType tradeType = 4;</code>
     * @param value The tradeType to set.
     * @return This builder for chaining.
     */
    public Builder setTradeType(com.jc.model.proto.TradeProtoc.TradeType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      tradeType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.encoding.TradeProtoc.TradeType tradeType = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTradeType() {
      
      tradeType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object symbol_ = "";
    /**
     * <code>string symbol = 5;</code>
     * @return The symbol.
     */
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string symbol = 5;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string symbol = 5;</code>
     * @param value The symbol to set.
     * @return This builder for chaining.
     */
    public Builder setSymbol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      symbol_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string symbol = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
      onChanged();
      return this;
    }
    /**
     * <code>string symbol = 5;</code>
     * @param value The bytes for symbol to set.
     * @return This builder for chaining.
     */
    public Builder setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      symbol_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object exchange_ = "";
    /**
     * <code>string exchange = 6;</code>
     * @return The exchange.
     */
    public java.lang.String getExchange() {
      java.lang.Object ref = exchange_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exchange_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string exchange = 6;</code>
     * @return The bytes for exchange.
     */
    public com.google.protobuf.ByteString
        getExchangeBytes() {
      java.lang.Object ref = exchange_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exchange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string exchange = 6;</code>
     * @param value The exchange to set.
     * @return This builder for chaining.
     */
    public Builder setExchange(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      exchange_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string exchange = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearExchange() {
      
      exchange_ = getDefaultInstance().getExchange();
      onChanged();
      return this;
    }
    /**
     * <code>string exchange = 6;</code>
     * @param value The bytes for exchange to set.
     * @return This builder for chaining.
     */
    public Builder setExchangeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      exchange_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:encoding.TradeProtoc)
  }

  // @@protoc_insertion_point(class_scope:encoding.TradeProtoc)
  private static final com.jc.model.proto.TradeProtoc DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.jc.model.proto.TradeProtoc();
  }

  public static com.jc.model.proto.TradeProtoc getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TradeProtoc>
      PARSER = new com.google.protobuf.AbstractParser<TradeProtoc>() {
    @java.lang.Override
    public TradeProtoc parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TradeProtoc(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TradeProtoc> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TradeProtoc> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.jc.model.proto.TradeProtoc getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

